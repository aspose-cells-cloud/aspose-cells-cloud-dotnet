namespace Aspose.Cells.Cloud.SDK.Test
{
    using System.IO;
    using System.Collections.Generic;
    using NUnit.Framework;
    using Aspose.Cells.Cloud.SDK.Api;
    using Aspose.Cells.Cloud.SDK.Model;
    /// <summary>
    ///  Class for testing CellsWorkbookApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class Freeing2206Tests : CellsBaseTest
    {
        private CellsApi instance;
        private LightCellsApi lightInstance;
        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CellsApi(clientId, clientSecret, apiVersion, testbaseurl);
            lightInstance = new LightCellsApi(clientId, clientSecret, apiVersion, testbaseurl);
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }
        [Test]
        public void CellsCELLSCLOUD_Saveas_Test()
        {
            UpdateDataFile(instance, TEMPFOLDER, BOOK1);
            var response = instance.CellsSaveAsPostDocumentSaveAs(BOOK1, null, "book1.pdf", null, null, TEMPFOLDER, null,  null, new Dictionary<string, string> { { "OnePagePerSheet", "false" } },false);
            Assert.IsInstanceOf<SaveResponse>(response, "response is System.IO.Stream");
        }

        [Test]
        public void CellsCELLSCLOUD_Clear_Test()
        {
            if (IsDockerTest)
            {
                Assert.IsTrue(true);
                return;
            }
            IDictionary<string, Stream> files = new Dictionary<string, Stream>();
            files.Add(BOOK1, GetTestDataStream(BOOK1));
            files.Add(AssemblyTest, GetTestDataStream(AssemblyTest));
            var filesResult = lightInstance.PostClearObjects(files, "comment","Shee1");
            Assert.IsInstanceOf<FilesResult>(filesResult, "response is AccessTokenResponse");
        }
        [Test]
        public void CellsCELLSCLOUD_Clear_PDF_Test()
        {
            if (IsDockerTest)
            {
                Assert.IsTrue(true);
                return;
            }
            IDictionary<string, Stream> files = new Dictionary<string, Stream>();
            files.Add(BOOK1, GetTestDataStream(BOOK1));
            files.Add(AssemblyTest, GetTestDataStream(AssemblyTest));
            var filesResult = lightInstance.PostClearObjects(files, "comment", "Shee1","PDF");
            Assert.IsInstanceOf<FilesResult>(filesResult, "response is AccessTokenResponse");
        }

    }
}
